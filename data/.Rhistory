shiny::runApp('~/Desktop/R Projects/shiny/delille_article_year')
runApp('~/Desktop/R Projects/shiny/delille_article_year')
runApp('~/Desktop/R Projects/shiny/delille_article_year')
runApp('~/Desktop/R Projects/shiny/delille_article_year')
getwd()
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_article_year')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_article_year')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_article_year')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_article_year')
runApp('~/Documents/GitHub/delille_viz/scripts/article_year_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_article_year')
runApp('~/Desktop/RISE/Marchal/all_years_in_one')
runApp('~/Documents/GitHub/delille_viz/scripts/delille_verses_only')
runApp('~/Documents/GitHub/delille_viz/scripts/verse_and_period')
runApp('~/Documents/GitHub/delille_viz/scripts/year_and_verse')
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp('~/Documents/GitHub/delille_viz/scripts/verse_and_period')
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp('~/Documents/GitHub/delille_viz/scripts/year_and_verse')
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
load("cite_year_df.Rda")
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
setwd("/Users/antheaalberto/Desktop/RISE/Marchal/all_years_in_one")
load("cite_year_df.Rda")
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp()
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp()
runApp()
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp('~/Desktop/RISE/Marchal/all_verses_in_one')
runApp()
runApp('~/Desktop/RISE/Marchal/delille_article_year')
runApp('~/Desktop/RISE/Marchal/delille_article_year')
runApp('~/Desktop/RISE/Marchal/delille_article_year')
runApp('~/Documents/GitHub/delille_viz/scripts/year_and_verse')
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/year_and_verse')
load("citer_df.Rda")
load("~/Documents/GitHub/delille_viz/scripts/article_year_pie/cite_art_yr_df.Rda")
load("~/Documents/GitHub/delille_viz/scripts/article_year_pie/long_art_yr.Rda")
View(long_art_yr)
load("~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie/long_citer.Rda")
load("~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie/citer_df.Rda")
View(citer_df)
View(long_citer)
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
View(citer_df)
setwd("/Users/antheaalberto/Documents/GitHub/delille_viz/data") ## Adjust this!
##### 4. citations-per-verse-per-citer-type_count.json #####
citers <- fromJSON(file="distinct-citers-per-verse-per-citer-type-per-year_count.json")
names(citers$results$bindings[[1]])
## the three lines above whether the necessary packages are installed; and if they are not, they will be installed
## the four lines below LOAD the necessary packages
library(ggplot2)
library(rjson)
library(dplyr)
library(tidyr)
##### 4. citations-per-verse-per-citer-type_count.json #####
citers <- fromJSON(file="distinct-citers-per-verse-per-citer-type-per-year_count.json")
names(citers$results$bindings[[1]])
citer_df <- tibble(verse = character(),
man_of_letters = character(),
vulgarizer = character(),
artist = character(),
others = character(),
all = character())
for (i in 1:length(citers$results$bindings)) {
number <- citers$results$bindings[[i]]$verseOrdinalNumeral$value
man_of_letters <- citers$results$bindings[[i]]$manOfLettersCount$value
vulgarizer <- citers$results$bindings[[i]]$vulgarizerCount$value
artist <- citers$results$bindings[[i]]$artistCount$value
others <- citers$results$bindings[[i]]$otherRoleCount$value
all <- citers$results$bindings[[i]]$allRoles$value
citer_df[i,1] <- number
citer_df[i,2] <- man_of_letters
citer_df[i,3] <- vulgarizer
citer_df[i,4] <- artist
citer_df[i,5] <- others
citer_df[i,6] <- all
}
citer_df <- sapply(citer_df,as.numeric)
##### 4. citations-per-verse-per-citer-type_count.json #####
citers <- fromJSON(file="distinct-citers-per-verse-per-citer-type-per-year_count.json")
names(citers$results$bindings[[1]])
##### 4. citations-per-verse-per-citer-type_count.json #####
citers <- fromJSON(file="distinct-citers-per-verse-per-citer-type-per-year_count.json")
names(citers$results$bindings[[1]])
citer_df <- tibble(verse = character(),
year = character(),
man_of_letters = character(),
vulgarizer = character(),
artist = character(),
others = character(),
all = character())
for (i in 1:length(citers$results$bindings)) {
number <- citers$results$bindings[[i]]$verseOrdinalNumeral$value
year <- citers$results$bindings[[i]]$citationYear$value
man_of_letters <- citers$results$bindings[[i]]$manOfLettersCount$value
vulgarizer <- citers$results$bindings[[i]]$vulgarizerCount$value
artist <- citers$results$bindings[[i]]$artistCount$value
others <- citers$results$bindings[[i]]$otherRoleCount$value
all <- citers$results$bindings[[i]]$allRoles$value
citer_df[i,1] <- number
citer_df[i,2] <- year
citer_df[i,3] <- man_of_letters
citer_df[i,4] <- vulgarizer
citer_df[i,5] <- artist
citer_df[i,6] <- others
citer_df[i,7] <- all
}
citer_df <- sapply(citer_df,as.numeric)
citer_df <- as.data.frame(citer_df)
View(citer_df)
long_citer <- citer_df %>% gather(citer, citations, -c(verse, year))
long_citer <- long_citer[long_citer$citer!="all",]
View(long_citer)
long_citer$citer <- as.factor(long_citer$citer)
levels(long_citer$citer)
long_citer$citer <- factor(long_citer$citer, levels=c("others", "artist", "vulgarizer", "man_of_letters"))
save(cite_art_yr_df, file = "/Users/antheaalberto/Documents/GitHub/delille_viz/scripts/article_year_pie/cite_art_yr_df.Rda")
save(cite_verse_df, file = "/Users/antheaalberto/Documents/GitHub/delille_viz/scripts/delille_verses_only/cite_verse_df.Rda")
save(citer_df, file = "/Users/antheaalberto/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart/citer_df.Rda")
save(long_citer, file = "/Users/antheaalberto/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart/long_citer.Rda")
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
class(long_citer$year)
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
min(citer_df$year)
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/citer_year_verse_pie')
runApp('~/Documents/GitHub/delille_viz/scripts/stacked_barplot_and_piechart')
library(keras)
library(tidyverse)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
imdb <- dataset_imdb(num_words = 10000)
c(c(train_data, train_labels), c(test_data, test_labels)) %<-% imdb
library(zeallot)
c(c(train_data, train_labels), c(test_data, test_labels)) %<-% imdb
imdb <- dataset_imdb(num_words = 10000)
c(c(train_data, train_labels), c(test_data, test_labels)) %<-% imdb
word_index <- dataset_imdb_word_index()
reverse_word_index <- names(word_index)
names(reverse_word_index) <- word_index
decoded_review <- sapply(train_data[[1]], function(index) {
word <- if (index >= 3) reverse_word_index[[as.character(index - 3)]]
if (!is.null(word)) word else "?"
})
decoded_review
vectorize_sequences <- function(sequences, dimension = 10000) {
results <- matrix(0, nrow = length(sequences), ncol = dimension)
for (i in 1:length(sequences))
results[i, sequences[[i]]] <- 1
results
}
x_train <- vectorize_sequences(train_data)
x_test <- vectorize_sequences(test_data)
View(x_test)
View(train_data)
View(x_train)
x_train[,1]
x_train[1,]
x_train[1,14]
train_data[[1]]
which(train_data[[1]]==3)
which(train_data[[1]]==2)
which(train_data[[1]]==1)
y_train <- as.numeric(train_labels)
y_test <- as.numeric(test_labels)
output = relu(dot(W, input) + b)
model <- keras_model_sequential() %>%
layer_dense(units = 16, activation = "relu", input_shape = c(10000)) %>%
layer_dense(units = 16, activation = "relu") %>%
layer_dense(units = 1, activation = "sigmoid")
model %>% compile(
optimizer = "rmsprop",
loss = "binary_crossentropy",
metrics = c("accuracy")
)
model %>% compile(
optimizer = optimizer_rmsprop(lr=0.001),
loss = "binary_crossentropy",
metrics = c("accuracy")
)
model %>% compile(
optimizer = optimizer_rmsprop(lr = 0.001),
loss = loss_binary_crossentropy,
metrics = metric_binary_accuracy
)
val_indices <- 1:10000
x_val <- x_train[val_indices,]
partial_x_train <- x_train[-val_indices,]
y_val <- y_train[val_indices]
partial_y_train <- y_train[-val_indices]
model %>% compile(
optimizer = "rmsprop",
loss = "binary_crossentropy",
metrics = c("accuracy")
)
history <- model %>% fit(
partial_x_train,
partial_y_train,
epochs = 20,
batch_size = 512,
validation_data = list(x_val, y_val)
)
str(history)
?recipe
library(tidymodels)
detach("package:tidymodels", unload = TRUE)
